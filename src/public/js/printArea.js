/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/printArea.js":
/*!***********************************!*\
  !*** ./resources/js/printArea.js ***!
  \***********************************/
/***/ (() => {

eval("/**\n *  Version 2.4.1 Copyright (C) 2013\n *  Tested in IE 11, FF 28.0 and Chrome 33.0.1750.154\n *  No official support for other browsers, but will TRY to accommodate challenges in other browsers.\n *  Example:\n *      Print Button: <div id=\"print_button\">Print</div>\n *      Print Area  : <div class=\"PrintArea\" id=\"MyId\" class=\"MyClass\"> ... html ... </div>\n *      Javascript  : <script>\n *                       $(\"div#print_button\").click(function(){\n *                           $(\"div.PrintArea\").printArea( [OPTIONS] );\n *                       });\n *                     </script>\n *  options are passed as json (example: {mode: \"popup\", popClose: false})\n *\n *  {OPTIONS}   | [type]     | (default), values      | Explanation\n *  ---------   | ---------  | ---------------------- | -----------\n *  @mode       | [string]   | (iframe),popup         | printable window is either iframe or browser popup\n *  @popHt      | [number]   | (500)                  | popup window height\n *  @popWd      | [number]   | (400)                  | popup window width\n *  @popX       | [number]   | (500)                  | popup window screen X position\n *  @popY       | [number]   | (500)                  | popup window screen Y position\n *  @popTitle   | [string]   | ('')                   | popup window title element\n *  @popClose   | [boolean]  | (false),true           | popup window close after printing\n *  @extraCss   | [string]   | ('')                   | comma separated list of extra css to include\n *  @retainAttr | [string[]] | [\"id\",\"class\",\"style\"] | string array of attributes to retain for the containment area. (ie: id, style, class)\n *  @standard   | [string]   | strict, loose, (html5) | Only for popup. For html 4.01, strict or loose document standard, or html 5 standard\n *  @extraHead  | [string]   | ('')                   | comma separated list of extra elements to be appended to the head tag\n */\n(function ($) {\n  var counter = 0;\n  var modes = {\n    iframe: \"iframe\",\n    popup: \"popup\"\n  };\n  var standards = {\n    strict: \"strict\",\n    loose: \"loose\",\n    html5: \"html5\"\n  };\n  var defaults = {\n    mode: modes.iframe,\n    standard: standards.html5,\n    popHt: 500,\n    popWd: 400,\n    popX: 200,\n    popY: 200,\n    popTitle: '',\n    popClose: false,\n    extraCss: '',\n    extraHead: '',\n    retainAttr: [\"id\", \"class\", \"style\"]\n  };\n  var settings = {}; //global settings\n\n  $.fn.printArea = function (options) {\n    $.extend(settings, defaults, options);\n    counter++;\n    var idPrefix = \"printArea_\";\n    $(\"[id^=\" + idPrefix + \"]\").remove();\n    settings.id = idPrefix + counter;\n    var $printSource = $(this);\n    var PrintAreaWindow = PrintArea.getPrintWindow();\n    PrintArea.write(PrintAreaWindow.doc, $printSource);\n    setTimeout(function () {\n      PrintArea.print(PrintAreaWindow);\n    }, 1000);\n  };\n\n  var PrintArea = {\n    print: function print(PAWindow) {\n      var paWindow = PAWindow.win;\n      $(PAWindow.doc).ready(function () {\n        paWindow.focus();\n        paWindow.print();\n        if (settings.mode == modes.popup && settings.popClose) setTimeout(function () {\n          paWindow.close();\n        }, 2000);\n      });\n    },\n    write: function write(PADocument, $ele) {\n      PADocument.open();\n      PADocument.write(PrintArea.docType() + \"<html>\" + PrintArea.getHead() + PrintArea.getBody($ele) + \"</html>\");\n      PADocument.close();\n    },\n    docType: function docType() {\n      if (settings.mode == modes.iframe) return \"\";\n      if (settings.standard == standards.html5) return \"<!DOCTYPE html>\";\n      var transitional = settings.standard == standards.loose ? \" Transitional\" : \"\";\n      var dtd = settings.standard == standards.loose ? \"loose\" : \"strict\";\n      return '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01' + transitional + '//EN\" \"http://www.w3.org/TR/html4/' + dtd + '.dtd\">';\n    },\n    getHead: function getHead() {\n      var extraHead = \"\";\n      var links = \"\";\n      if (settings.extraHead) settings.extraHead.replace(/([^,]+)/g, function (m) {\n        extraHead += m;\n      });\n      $(document).find(\"link\").filter(function () {\n        // Requirement: <link> element MUST have rel=\"stylesheet\" to be considered in print document\n        var relAttr = $(this).attr(\"rel\");\n        return $.type(relAttr) === 'undefined' == false && relAttr.toLowerCase() == 'stylesheet';\n      }).filter(function () {\n        // Include if media is undefined, empty, print or all\n        var mediaAttr = $(this).attr(\"media\");\n        return $.type(mediaAttr) === 'undefined' || mediaAttr == \"\" || mediaAttr.toLowerCase() == 'print' || mediaAttr.toLowerCase() == 'all';\n      }).each(function () {\n        links += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + $(this).attr(\"href\") + '\" >';\n      });\n      if (settings.extraCss) settings.extraCss.replace(/([^,\\s]+)/g, function (m) {\n        links += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + m + '\">';\n      });\n      return \"<head><title>\" + settings.popTitle + \"</title>\" + extraHead + links + \"</head>\";\n    },\n    getBody: function getBody(elements) {\n      var htm = \"\";\n      var attrs = settings.retainAttr;\n      elements.each(function () {\n        var ele = PrintArea.getFormData($(this));\n        var attributes = \"\";\n\n        for (var x = 0; x < attrs.length; x++) {\n          var eleAttr = $(ele).attr(attrs[x]);\n          if (eleAttr) attributes += (attributes.length > 0 ? \" \" : \"\") + attrs[x] + \"='\" + eleAttr + \"'\";\n        }\n\n        htm += '<div ' + attributes + '>' + $(ele).html() + '</div>';\n      });\n      return \"<body>\" + htm + \"</body>\";\n    },\n    getFormData: function getFormData(ele) {\n      var copy = ele.clone();\n      var copiedInputs = $(\"input,select,textarea\", copy);\n      $(\"input,select,textarea\", ele).each(function (i) {\n        var typeInput = $(this).attr(\"type\");\n        if ($.type(typeInput) === 'undefined') typeInput = $(this).is(\"select\") ? \"select\" : $(this).is(\"textarea\") ? \"textarea\" : \"\";\n        var copiedInput = copiedInputs.eq(i);\n        if (typeInput == \"radio\" || typeInput == \"checkbox\") copiedInput.attr(\"checked\", $(this).is(\":checked\"));else if (typeInput == \"text\" || typeInput == \"\") copiedInput.attr(\"value\", $(this).val());else if (typeInput == \"select\") $(this).find(\"option\").each(function (i) {\n          if ($(this).is(\":selected\")) $(\"option\", copiedInput).eq(i).attr(\"selected\", true);\n        });else if (typeInput == \"textarea\") copiedInput.text($(this).val());\n      });\n      return copy;\n    },\n    getPrintWindow: function getPrintWindow() {\n      switch (settings.mode) {\n        case modes.iframe:\n          var f = new PrintArea.Iframe();\n          return {\n            win: f.contentWindow || f,\n            doc: f.doc\n          };\n\n        case modes.popup:\n          var p = new PrintArea.Popup();\n          return {\n            win: p,\n            doc: p.doc\n          };\n      }\n    },\n    Iframe: function Iframe() {\n      var frameId = settings.id;\n      var iframeStyle = 'border:0;position:absolute;width:0px;height:0px;right:0px;top:0px;';\n      var iframe;\n\n      try {\n        iframe = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        $(iframe).attr({\n          style: iframeStyle,\n          id: frameId,\n          src: \"#\" + new Date().getTime()\n        });\n        iframe.doc = null;\n        iframe.doc = iframe.contentDocument ? iframe.contentDocument : iframe.contentWindow ? iframe.contentWindow.document : iframe.document;\n      } catch (e) {\n        throw e + \". iframes may not be supported in this browser.\";\n      }\n\n      if (iframe.doc == null) throw \"Cannot find document.\";\n      return iframe;\n    },\n    Popup: function Popup() {\n      var windowAttr = \"location=yes,statusbar=no,directories=no,menubar=no,titlebar=no,toolbar=no,dependent=no\";\n      windowAttr += \",width=\" + settings.popWd + \",height=\" + settings.popHt;\n      windowAttr += \",resizable=yes,screenX=\" + settings.popX + \",screenY=\" + settings.popY + \",personalbar=no,scrollbars=yes\";\n      var newWin = window.open(\"\", \"_blank\", windowAttr);\n      newWin.doc = newWin.document;\n      return newWin;\n    }\n  };\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/printArea.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/printArea.js"]();
/******/ 	
/******/ })()
;